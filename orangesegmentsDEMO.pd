#N canvas 288 25 1214 946 10;
#X obj 329 416 dac~;
#X obj 309 97 orangesegments~;
#X floatatom 562 621 5 0 0 0 ms - -;
#X obj 562 650 t b f;
#X obj 574 710 /;
#X msg 562 680 60000;
#X floatatom 574 741 5 0 0 0 bpm - -;
#X text 545 580 ms to bpm;
#X floatatom 702 621 5 0 0 0 bpm - -;
#X obj 702 650 t b f;
#X obj 714 710 /;
#X msg 702 680 60000;
#X floatatom 714 741 5 0 0 0 ms - -;
#X text 679 580 bpm to ms;
#X floatatom 502 416 8 0 0 0 - - -;
#X text 500 431 segment length in ms;
#X obj 437 488 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 435 507 the moment right before a new segment plays;
#X text 186 442 signal outlets \, channels 1 and 2;
#X text 30 460 (L and R \, for a stereo file \, otherwise mono out
channel 1);
#X text 532 192 it begins by dividing the loaded audio file into 10
pieces (the same amount of segments there usually are in an orange).
Unless the file is pretty short \, you'll likely want to increase the
amount of segments it is divided into - once you do \, you can give
it a little nudge with the "onward!" button and it will move on to
the next segment (it also does this automatically whenever a segment
ends).;
#X text 533 287 this value determines which segments will be played
- it is "the amount of segments that the program advances by every
rotation". "0" loops a segment \, "1" plays the file in order \, "2"
skips a segment each rotation \, etc.;
#X text 534 119 a wav file \, any samplerate (though keep it less than
8e+07 samples all together \, which is something like 30mins of audio
at 44.1 kHz);
#X connect 1 0 0 0;
#X connect 1 1 0 1;
#X connect 1 2 16 0;
#X connect 1 3 14 0;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 3 1 4 1;
#X connect 4 0 6 0;
#X connect 5 0 4 0;
#X connect 8 0 9 0;
#X connect 9 0 11 0;
#X connect 9 1 10 1;
#X connect 10 0 12 0;
#X connect 11 0 10 0;
